#include "retronomicon/lib/core/rect.h"
#include <cmath>

/**
 * The namespace for basic libraries such as points, rectangle cirle, etc.
 */
namespace retronomicon::lib::core{

    /*************************************************************************************************
     * Constructor: set m_x and m_y
     *************************************************************************************************/
    Rect::Rect(int x, int y, int width, int height){
        m_position = new Point(x,y);
        m_anchor = new Point(0,0);
        setSize(width,height);
    }

    /*************************************************************************************************
     * Constructor: set m_x and m_y
     *************************************************************************************************/
    Rect::Rect(Point* position, int width, int height){
        m_position = position;
        m_anchor = new Point(0,0);
        setSize(width,height);
    }
    /*************************************************************************************************
     * Constructor: set m_x and m_y
     *************************************************************************************************/
    Rect::Rect(Point* position,Point* anchor, int width, int height){
        m_position = position;
        m_anchor = anchor;
        m_anchor = new Point(0,0);
        setSize(width,height);
    }

    /*************************************************************************************************
     * Constructor: change the size of this rectangle
     *************************************************************************************************/
    void Rect::setSize(int width,int height){
        m_width = width;
        m_height = height;
    }

    /*************************************************************************************************
     * Constructor: change position of this rectangle
     *************************************************************************************************/
    void Rect::setPosition(int x,int y){
        m_position->set(x,y);
    }

    /*************************************************************************************************
     * Constructor: change position of this rectangle with another point
     *************************************************************************************************/
    void Rect::setPosition(Point* position){
        delete m_position;
        m_position = position;
    }

    /*************************************************************************************************
     * Get x position
     *************************************************************************************************/
    Point* Rect::getPosition() const {
        return m_position;
    }

    /*************************************************************************************************
     * Get anchor
     *************************************************************************************************/
    Point* Rect::getAnchor() const {
        return m_anchor;
    }

    /*************************************************************************************************
     * Get x position
     *************************************************************************************************/
    int Rect::getX() const {
        return m_position->getX();
    }

    /*************************************************************************************************
     * Get y position
     *************************************************************************************************/
    int Rect::getY() const {
        return m_position->getY();
    }

    /*************************************************************************************************
     * Get x width
     *************************************************************************************************/
    int Rect::getWidth() const {
        return m_width;
    }

    /*************************************************************************************************
     * Get y height
     *************************************************************************************************/
    int Rect::getHeight() const {
        return m_height;
    }

    /*************************************************************************************************
     * Generate SDL rect for rendering purpose
     *************************************************************************************************/
    SDL_Rect Rect::generateSDLRect(){
        return { this->getX(), this->getY(), this->getWidth(), this->getHeight() };
    }

}